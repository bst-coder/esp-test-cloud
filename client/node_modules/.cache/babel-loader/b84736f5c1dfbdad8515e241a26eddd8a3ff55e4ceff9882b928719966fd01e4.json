{"ast":null,"code":"var _jsxFileName = \"/home/bst/AWS/smart-irrigation-system/client/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { deviceAPI, systemAPI } from '../services/api';\nimport DeviceCard from './DeviceCard';\nimport ZoneCard from './ZoneCard';\nimport CommandForm from './CommandForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [devices, setDevices] = useState([]);\n  const [selectedDevice, setSelectedDevice] = useState(null);\n  const [deviceData, setDeviceData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showCommandForm, setShowCommandForm] = useState(false);\n  const [systemStatus, setSystemStatus] = useState(null);\n  const [lastUpdate, setLastUpdate] = useState(new Date());\n\n  // Environment-based configuration\n  const REFRESH_INTERVAL = parseInt(process.env.REACT_APP_REFRESH_INTERVAL) || 10000;\n\n  // Fetch devices on component mount\n  useEffect(() => {\n    fetchDevices();\n    checkSystemHealth();\n\n    // Set up auto-refresh\n    const interval = setInterval(() => {\n      fetchDevices();\n      if (selectedDevice) {\n        fetchDeviceData(selectedDevice.deviceId);\n      }\n    }, REFRESH_INTERVAL);\n    return () => clearInterval(interval);\n  }, [REFRESH_INTERVAL]);\n\n  // Fetch device data when selected device changes\n  useEffect(() => {\n    if (selectedDevice) {\n      fetchDeviceData(selectedDevice.deviceId);\n    }\n  }, [selectedDevice]);\n  const fetchDevices = async () => {\n    try {\n      const response = await deviceAPI.getDevices();\n      setDevices(response.data);\n      setError(null);\n      setLastUpdate(new Date());\n\n      // If no device is selected, select the first one\n      if (!selectedDevice && response.data.length > 0) {\n        setSelectedDevice(response.data[0]);\n      }\n    } catch (err) {\n      setError('Failed to fetch devices');\n      console.error('Error fetching devices:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchDeviceData = async deviceId => {\n    try {\n      const response = await deviceAPI.getDeviceLatest(deviceId);\n      setDeviceData(response.data);\n    } catch (err) {\n      console.error('Error fetching device data:', err);\n    }\n  };\n  const checkSystemHealth = async () => {\n    try {\n      const response = await systemAPI.healthCheck();\n      setSystemStatus(response.data);\n    } catch (err) {\n      console.error('System health check failed:', err);\n    }\n  };\n  const handleSendCommand = async command => {\n    if (!selectedDevice) return;\n    try {\n      await deviceAPI.sendCommand(selectedDevice.deviceId, command);\n\n      // Refresh device data after sending command\n      setTimeout(() => {\n        fetchDeviceData(selectedDevice.deviceId);\n      }, 1000);\n      return Promise.resolve();\n    } catch (err) {\n      console.error('Error sending command:', err);\n      throw err;\n    }\n  };\n  const handleRefresh = () => {\n    setLoading(true);\n    fetchDevices();\n    if (selectedDevice) {\n      fetchDeviceData(selectedDevice.deviceId);\n    }\n  };\n  if (loading && devices.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-100 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-600\",\n          children: \"Loading dashboard...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"bg-white shadow-sm border-b border-gray-200\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between h-16\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-2xl font-bold text-gray-900\",\n              children: \"\\uD83C\\uDF31 Smart Irrigation Dashboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-4\",\n            children: [systemStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center space-x-2 text-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `w-2 h-2 rounded-full ${systemStatus.database === 'connected' ? 'bg-green-500' : 'bg-red-500'}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-600\",\n                children: systemStatus.database === 'connected' ? 'Connected' : 'Disconnected'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-500\",\n              children: [\"Updated: \", lastUpdate.toLocaleTimeString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleRefresh,\n              className: \"px-3 py-1 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors text-sm\",\n              disabled: loading,\n              children: [loading ? '🔄' : '↻', \" Refresh\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this), selectedDevice && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowCommandForm(true),\n              className: \"px-3 py-1 bg-green-600 text-white rounded-md hover:bg-green-700 transition-colors text-sm\",\n              children: \"\\uD83D\\uDCE1 Send Command\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\",\n      children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6 bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded\",\n        children: [\"\\u26A0\\uFE0F \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 lg:grid-cols-3 gap-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lg:col-span-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-lg font-semibold text-gray-800 mb-4\",\n            children: [\"Connected Devices (\", devices.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), devices.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white rounded-lg shadow-md p-8 text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-4xl mb-4\",\n              children: \"\\uD83D\\uDCF1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-gray-600 mb-2\",\n              children: \"No devices found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-500\",\n              children: \"Start the ESP32 simulator to see devices here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: devices.map(device => /*#__PURE__*/_jsxDEV(DeviceCard, {\n              device: device,\n              onSelectDevice: setSelectedDevice,\n              isSelected: (selectedDevice === null || selectedDevice === void 0 ? void 0 : selectedDevice.deviceId) === device.deviceId\n            }, device.deviceId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lg:col-span-2\",\n          children: selectedDevice ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between mb-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-lg font-semibold text-gray-800\",\n                children: [selectedDevice.name, \" - Zone Status\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-500\",\n                children: [\"Device: \", selectedDevice.deviceId]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this), deviceData ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-6\",\n              children: deviceData.map(zone => /*#__PURE__*/_jsxDEV(ZoneCard, {\n                zone: zone,\n                onSendCommand: handleSendCommand\n              }, zone.zoneId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-white rounded-lg shadow-md p-8 text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-gray-600\",\n                children: \"Loading zone data...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white rounded-lg shadow-md p-8 text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-4xl mb-4\",\n              children: \"\\uD83C\\uDF31\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-gray-600 mb-2\",\n              children: \"Select a device\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-500\",\n              children: \"Choose a device from the list to view its zones and sensor data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), showCommandForm && /*#__PURE__*/_jsxDEV(CommandForm, {\n      device: selectedDevice,\n      onSendCommand: handleSendCommand,\n      onClose: () => setShowCommandForm(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"+h/oPEOR9cRGnrDreK0t74aV5aM=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","deviceAPI","systemAPI","DeviceCard","ZoneCard","CommandForm","jsxDEV","_jsxDEV","Dashboard","_s","devices","setDevices","selectedDevice","setSelectedDevice","deviceData","setDeviceData","loading","setLoading","error","setError","showCommandForm","setShowCommandForm","systemStatus","setSystemStatus","lastUpdate","setLastUpdate","Date","REFRESH_INTERVAL","parseInt","process","env","REACT_APP_REFRESH_INTERVAL","fetchDevices","checkSystemHealth","interval","setInterval","fetchDeviceData","deviceId","clearInterval","response","getDevices","data","length","err","console","getDeviceLatest","healthCheck","handleSendCommand","command","sendCommand","setTimeout","Promise","resolve","handleRefresh","className","children","fileName","_jsxFileName","lineNumber","columnNumber","database","toLocaleTimeString","onClick","disabled","map","device","onSelectDevice","isSelected","name","zone","onSendCommand","zoneId","onClose","_c","$RefreshReg$"],"sources":["/home/bst/AWS/smart-irrigation-system/client/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { deviceAPI, systemAPI } from '../services/api';\nimport DeviceCard from './DeviceCard';\nimport ZoneCard from './ZoneCard';\nimport CommandForm from './CommandForm';\n\nconst Dashboard = () => {\n  const [devices, setDevices] = useState([]);\n  const [selectedDevice, setSelectedDevice] = useState(null);\n  const [deviceData, setDeviceData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showCommandForm, setShowCommandForm] = useState(false);\n  const [systemStatus, setSystemStatus] = useState(null);\n  const [lastUpdate, setLastUpdate] = useState(new Date());\n\n  // Environment-based configuration\n  const REFRESH_INTERVAL = parseInt(process.env.REACT_APP_REFRESH_INTERVAL) || 10000;\n\n  // Fetch devices on component mount\n  useEffect(() => {\n    fetchDevices();\n    checkSystemHealth();\n    \n    // Set up auto-refresh\n    const interval = setInterval(() => {\n      fetchDevices();\n      if (selectedDevice) {\n        fetchDeviceData(selectedDevice.deviceId);\n      }\n    }, REFRESH_INTERVAL);\n\n    return () => clearInterval(interval);\n  }, [REFRESH_INTERVAL]);\n\n  // Fetch device data when selected device changes\n  useEffect(() => {\n    if (selectedDevice) {\n      fetchDeviceData(selectedDevice.deviceId);\n    }\n  }, [selectedDevice]);\n\n  const fetchDevices = async () => {\n    try {\n      const response = await deviceAPI.getDevices();\n      setDevices(response.data);\n      setError(null);\n      setLastUpdate(new Date());\n      \n      // If no device is selected, select the first one\n      if (!selectedDevice && response.data.length > 0) {\n        setSelectedDevice(response.data[0]);\n      }\n    } catch (err) {\n      setError('Failed to fetch devices');\n      console.error('Error fetching devices:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchDeviceData = async (deviceId) => {\n    try {\n      const response = await deviceAPI.getDeviceLatest(deviceId);\n      setDeviceData(response.data);\n    } catch (err) {\n      console.error('Error fetching device data:', err);\n    }\n  };\n\n  const checkSystemHealth = async () => {\n    try {\n      const response = await systemAPI.healthCheck();\n      setSystemStatus(response.data);\n    } catch (err) {\n      console.error('System health check failed:', err);\n    }\n  };\n\n  const handleSendCommand = async (command) => {\n    if (!selectedDevice) return;\n\n    try {\n      await deviceAPI.sendCommand(selectedDevice.deviceId, command);\n      \n      // Refresh device data after sending command\n      setTimeout(() => {\n        fetchDeviceData(selectedDevice.deviceId);\n      }, 1000);\n      \n      return Promise.resolve();\n    } catch (err) {\n      console.error('Error sending command:', err);\n      throw err;\n    }\n  };\n\n  const handleRefresh = () => {\n    setLoading(true);\n    fetchDevices();\n    if (selectedDevice) {\n      fetchDeviceData(selectedDevice.deviceId);\n    }\n  };\n\n  if (loading && devices.length === 0) {\n    return (\n      <div className=\"min-h-screen bg-gray-100 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n          <div className=\"text-gray-600\">Loading dashboard...</div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-100\">\n      {/* Header */}\n      <header className=\"bg-white shadow-sm border-b border-gray-200\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between h-16\">\n            <div className=\"flex items-center\">\n              <h1 className=\"text-2xl font-bold text-gray-900\">\n                🌱 Smart Irrigation Dashboard\n              </h1>\n            </div>\n            \n            <div className=\"flex items-center space-x-4\">\n              {/* System Status */}\n              {systemStatus && (\n                <div className=\"flex items-center space-x-2 text-sm\">\n                  <div className={`w-2 h-2 rounded-full ${\n                    systemStatus.database === 'connected' ? 'bg-green-500' : 'bg-red-500'\n                  }`}></div>\n                  <span className=\"text-gray-600\">\n                    {systemStatus.database === 'connected' ? 'Connected' : 'Disconnected'}\n                  </span>\n                </div>\n              )}\n              \n              {/* Last Update */}\n              <div className=\"text-sm text-gray-500\">\n                Updated: {lastUpdate.toLocaleTimeString()}\n              </div>\n              \n              {/* Refresh Button */}\n              <button\n                onClick={handleRefresh}\n                className=\"px-3 py-1 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors text-sm\"\n                disabled={loading}\n              >\n                {loading ? '🔄' : '↻'} Refresh\n              </button>\n              \n              {/* Manual Command Button */}\n              {selectedDevice && (\n                <button\n                  onClick={() => setShowCommandForm(true)}\n                  className=\"px-3 py-1 bg-green-600 text-white rounded-md hover:bg-green-700 transition-colors text-sm\"\n                >\n                  📡 Send Command\n                </button>\n              )}\n            </div>\n          </div>\n        </div>\n      </header>\n\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {error && (\n          <div className=\"mb-6 bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded\">\n            ⚠️ {error}\n          </div>\n        )}\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n          {/* Device List */}\n          <div className=\"lg:col-span-1\">\n            <h2 className=\"text-lg font-semibold text-gray-800 mb-4\">\n              Connected Devices ({devices.length})\n            </h2>\n            \n            {devices.length === 0 ? (\n              <div className=\"bg-white rounded-lg shadow-md p-8 text-center\">\n                <div className=\"text-4xl mb-4\">📱</div>\n                <div className=\"text-gray-600 mb-2\">No devices found</div>\n                <div className=\"text-sm text-gray-500\">\n                  Start the ESP32 simulator to see devices here\n                </div>\n              </div>\n            ) : (\n              <div className=\"space-y-4\">\n                {devices.map(device => (\n                  <DeviceCard\n                    key={device.deviceId}\n                    device={device}\n                    onSelectDevice={setSelectedDevice}\n                    isSelected={selectedDevice?.deviceId === device.deviceId}\n                  />\n                ))}\n              </div>\n            )}\n          </div>\n\n          {/* Device Details */}\n          <div className=\"lg:col-span-2\">\n            {selectedDevice ? (\n              <div>\n                <div className=\"flex items-center justify-between mb-6\">\n                  <h2 className=\"text-lg font-semibold text-gray-800\">\n                    {selectedDevice.name} - Zone Status\n                  </h2>\n                  <div className=\"text-sm text-gray-500\">\n                    Device: {selectedDevice.deviceId}\n                  </div>\n                </div>\n\n                {deviceData ? (\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-6\">\n                    {deviceData.map(zone => (\n                      <ZoneCard\n                        key={zone.zoneId}\n                        zone={zone}\n                        onSendCommand={handleSendCommand}\n                      />\n                    ))}\n                  </div>\n                ) : (\n                  <div className=\"bg-white rounded-lg shadow-md p-8 text-center\">\n                    <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n                    <div className=\"text-gray-600\">Loading zone data...</div>\n                  </div>\n                )}\n              </div>\n            ) : (\n              <div className=\"bg-white rounded-lg shadow-md p-8 text-center\">\n                <div className=\"text-4xl mb-4\">🌱</div>\n                <div className=\"text-gray-600 mb-2\">Select a device</div>\n                <div className=\"text-sm text-gray-500\">\n                  Choose a device from the list to view its zones and sensor data\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Command Form Modal */}\n      {showCommandForm && (\n        <CommandForm\n          device={selectedDevice}\n          onSendCommand={handleSendCommand}\n          onClose={() => setShowCommandForm(false)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}