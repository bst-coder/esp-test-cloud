{"ast":null,"code":"import axios from 'axios';\n\n// Environment-based API configuration\nconst API_BASE_URL = process.env.NODE_ENV === 'production' ? process.env.REACT_APP_API_URL || '/api' : process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nconst API_TIMEOUT = parseInt(process.env.REACT_APP_API_TIMEOUT) || 10000;\nconst RETRY_ATTEMPTS = parseInt(process.env.REACT_APP_RETRY_ATTEMPTS) || 3;\nconsole.log(`🔗 API Base URL: ${API_BASE_URL}`);\nconsole.log(`⏱️ API Timeout: ${API_TIMEOUT}ms`);\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: API_TIMEOUT,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor for debugging\napi.interceptors.request.use(config => {\n  var _config$method;\n  console.log(`🔄 API Request: ${(_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase()} ${config.url}`);\n  return config;\n}, error => {\n  console.error('❌ API Request Error:', error);\n  return Promise.reject(error);\n});\n\n// Response interceptor for error handling\napi.interceptors.response.use(response => {\n  console.log(`✅ API Response: ${response.status} ${response.config.url}`);\n  return response;\n}, error => {\n  var _error$response;\n  console.error('❌ API Response Error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n  return Promise.reject(error);\n});\n\n// Device API functions\nexport const deviceAPI = {\n  // Get all devices\n  getDevices: () => api.get('/devices'),\n  // Get device latest data\n  getDeviceLatest: deviceId => api.get(`/devices/${deviceId}/latest`),\n  // Get device sensor logs\n  getDeviceLogs: (deviceId, params = {}) => api.get(`/devices/${deviceId}/logs`, {\n    params\n  }),\n  // Send manual command\n  sendCommand: (deviceId, command) => api.post(`/devices/${deviceId}/command`, command),\n  // Get device commands\n  getCommands: (deviceId, params = {}) => api.get(`/devices/${deviceId}/commands`, {\n    params\n  })\n};\n\n// System API functions\nexport const systemAPI = {\n  // Health check\n  healthCheck: () => api.get('/health')\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","NODE_ENV","REACT_APP_API_URL","API_TIMEOUT","parseInt","REACT_APP_API_TIMEOUT","RETRY_ATTEMPTS","REACT_APP_RETRY_ATTEMPTS","console","log","api","create","baseURL","timeout","headers","interceptors","request","use","config","_config$method","method","toUpperCase","url","error","Promise","reject","response","status","_error$response","data","message","deviceAPI","getDevices","get","getDeviceLatest","deviceId","getDeviceLogs","params","sendCommand","command","post","getCommands","systemAPI","healthCheck"],"sources":["/home/bst/AWS/smart-irrigation-system/client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Environment-based API configuration\nconst API_BASE_URL = process.env.NODE_ENV === 'production' \n  ? process.env.REACT_APP_API_URL || '/api'\n  : process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\nconst API_TIMEOUT = parseInt(process.env.REACT_APP_API_TIMEOUT) || 10000;\nconst RETRY_ATTEMPTS = parseInt(process.env.REACT_APP_RETRY_ATTEMPTS) || 3;\n\nconsole.log(`🔗 API Base URL: ${API_BASE_URL}`);\nconsole.log(`⏱️ API Timeout: ${API_TIMEOUT}ms`);\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: API_TIMEOUT,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor for debugging\napi.interceptors.request.use(\n  (config) => {\n    console.log(`🔄 API Request: ${config.method?.toUpperCase()} ${config.url}`);\n    return config;\n  },\n  (error) => {\n    console.error('❌ API Request Error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor for error handling\napi.interceptors.response.use(\n  (response) => {\n    console.log(`✅ API Response: ${response.status} ${response.config.url}`);\n    return response;\n  },\n  (error) => {\n    console.error('❌ API Response Error:', error.response?.data || error.message);\n    return Promise.reject(error);\n  }\n);\n\n// Device API functions\nexport const deviceAPI = {\n  // Get all devices\n  getDevices: () => api.get('/devices'),\n  \n  // Get device latest data\n  getDeviceLatest: (deviceId) => api.get(`/devices/${deviceId}/latest`),\n  \n  // Get device sensor logs\n  getDeviceLogs: (deviceId, params = {}) => api.get(`/devices/${deviceId}/logs`, { params }),\n  \n  // Send manual command\n  sendCommand: (deviceId, command) => api.post(`/devices/${deviceId}/command`, command),\n  \n  // Get device commands\n  getCommands: (deviceId, params = {}) => api.get(`/devices/${deviceId}/commands`, { params }),\n};\n\n// System API functions\nexport const systemAPI = {\n  // Health check\n  healthCheck: () => api.get('/health'),\n};\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}