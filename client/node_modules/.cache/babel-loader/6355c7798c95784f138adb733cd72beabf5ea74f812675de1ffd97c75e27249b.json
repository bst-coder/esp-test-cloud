{"ast":null,"code":"import axios from'axios';// Environment-based API configuration\nconst API_BASE_URL=process.env.NODE_ENV==='production'?process.env.REACT_APP_API_URL||'/api':process.env.REACT_APP_API_URL||'http://localhost:5000/api';const API_TIMEOUT=parseInt(process.env.REACT_APP_API_TIMEOUT)||10000;const RETRY_ATTEMPTS=parseInt(process.env.REACT_APP_RETRY_ATTEMPTS)||3;console.log(`🔗 API Base URL: ${API_BASE_URL}`);console.log(`⏱️ API Timeout: ${API_TIMEOUT}ms`);const api=axios.create({baseURL:API_BASE_URL,timeout:API_TIMEOUT,headers:{'Content-Type':'application/json'}});// Request interceptor for debugging\napi.interceptors.request.use(config=>{var _config$method;console.log(`🔄 API Request: ${(_config$method=config.method)===null||_config$method===void 0?void 0:_config$method.toUpperCase()} ${config.url}`);return config;},error=>{console.error('❌ API Request Error:',error);return Promise.reject(error);});// Response interceptor for error handling\napi.interceptors.response.use(response=>{console.log(`✅ API Response: ${response.status} ${response.config.url}`);return response;},error=>{var _error$response;console.error('❌ API Response Error:',((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data)||error.message);return Promise.reject(error);});// Device API functions\nexport const deviceAPI={// Get all devices\ngetDevices:()=>api.get('/devices'),// Get device latest data\ngetDeviceLatest:deviceId=>api.get(`/devices/${deviceId}/latest`),// Get device sensor logs\ngetDeviceLogs:function(deviceId){let params=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};return api.get(`/devices/${deviceId}/logs`,{params});},// Send manual command\nsendCommand:(deviceId,command)=>api.post(`/devices/${deviceId}/command`,command),// Get device commands\ngetCommands:function(deviceId){let params=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};return api.get(`/devices/${deviceId}/commands`,{params});}};// System API functions\nexport const systemAPI={// Health check\nhealthCheck:()=>api.get('/health')};export default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","NODE_ENV","REACT_APP_API_URL","API_TIMEOUT","parseInt","REACT_APP_API_TIMEOUT","RETRY_ATTEMPTS","REACT_APP_RETRY_ATTEMPTS","console","log","api","create","baseURL","timeout","headers","interceptors","request","use","config","_config$method","method","toUpperCase","url","error","Promise","reject","response","status","_error$response","data","message","deviceAPI","getDevices","get","getDeviceLatest","deviceId","getDeviceLogs","params","arguments","length","undefined","sendCommand","command","post","getCommands","systemAPI","healthCheck"],"sources":["/home/bst/AWS/smart-irrigation-system/client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Environment-based API configuration\nconst API_BASE_URL = process.env.NODE_ENV === 'production' \n  ? process.env.REACT_APP_API_URL || '/api'\n  : process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\nconst API_TIMEOUT = parseInt(process.env.REACT_APP_API_TIMEOUT) || 10000;\nconst RETRY_ATTEMPTS = parseInt(process.env.REACT_APP_RETRY_ATTEMPTS) || 3;\n\nconsole.log(`🔗 API Base URL: ${API_BASE_URL}`);\nconsole.log(`⏱️ API Timeout: ${API_TIMEOUT}ms`);\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: API_TIMEOUT,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor for debugging\napi.interceptors.request.use(\n  (config) => {\n    console.log(`🔄 API Request: ${config.method?.toUpperCase()} ${config.url}`);\n    return config;\n  },\n  (error) => {\n    console.error('❌ API Request Error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor for error handling\napi.interceptors.response.use(\n  (response) => {\n    console.log(`✅ API Response: ${response.status} ${response.config.url}`);\n    return response;\n  },\n  (error) => {\n    console.error('❌ API Response Error:', error.response?.data || error.message);\n    return Promise.reject(error);\n  }\n);\n\n// Device API functions\nexport const deviceAPI = {\n  // Get all devices\n  getDevices: () => api.get('/devices'),\n  \n  // Get device latest data\n  getDeviceLatest: (deviceId) => api.get(`/devices/${deviceId}/latest`),\n  \n  // Get device sensor logs\n  getDeviceLogs: (deviceId, params = {}) => api.get(`/devices/${deviceId}/logs`, { params }),\n  \n  // Send manual command\n  sendCommand: (deviceId, command) => api.post(`/devices/${deviceId}/command`, command),\n  \n  // Get device commands\n  getCommands: (deviceId, params = {}) => api.get(`/devices/${deviceId}/commands`, { params }),\n};\n\n// System API functions\nexport const systemAPI = {\n  // Health check\n  healthCheck: () => api.get('/health'),\n};\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}